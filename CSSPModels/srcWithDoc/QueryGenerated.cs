/*
 * Auto generated from the CSSPCodeWriter.proj by clicking on the [\srcWithDoc\[ModelClassName]Generated.cs] button
 *
 * Do not edit this file.
 *
 * Last generated by Charles on CHARLES-PC machine
 *
 */ 
using CSSPEnums;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace CSSPModels
{
    /// <summary>
    /// > [!NOTE]
    /// > 
    /// > <para>**No DB properties** :</para>
    /// > <para>**Other properties** : [ModelType](CSSPModels.Query.html#CSSPModels_Query_ModelType), [Language](CSSPModels.Query.html#CSSPModels_Query_Language), [Lang](CSSPModels.Query.html#CSSPModels_Query_Lang), [Skip](CSSPModels.Query.html#CSSPModels_Query_Skip), [Take](CSSPModels.Query.html#CSSPModels_Query_Take), [Order](CSSPModels.Query.html#CSSPModels_Query_Order), [Where](CSSPModels.Query.html#CSSPModels_Query_Where), [EntityQueryDetailType](CSSPModels.Query.html#CSSPModels_Query_EntityQueryDetailType), [EntityQueryType](CSSPModels.Query.html#CSSPModels_Query_EntityQueryType), [OrderList](CSSPModels.Query.html#CSSPModels_Query_OrderList), [WhereInfoList](CSSPModels.Query.html#CSSPModels_Query_WhereInfoList), [HasErrors](CSSPModels.Query.html#CSSPModels_Query_HasErrors), [ValidationResults](CSSPModels.Query.html#CSSPModels_Query_ValidationResults), </para>
    /// > 
    /// > <para>**Used by [CSSPServices](CSSPServices.html)** : [QueryService](CSSPServices.QueryService.html)</para>
    /// > <para>**Requires [CSSPEnums](CSSPEnums.html)** : [LanguageEnum](CSSPEnums.LanguageEnum.html), [EntityQueryDetailTypeEnum](CSSPEnums.EntityQueryDetailTypeEnum.html), [EntityQueryTypeEnum](CSSPEnums.EntityQueryTypeEnum.html)</para>
    /// > <para>**Return to [CSSPModels](CSSPModels.html)**</para>
    /// </summary>
    [NotMapped]
    public partial class Query : Error
    {
        #region Properties in DB
        #endregion Properties in DB

        #region Properties not in DB
        public Type ModelType { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>**Other custom attributes**</para>
        /// > <para>[[CSSPEnumType](CSSPModels.CSSPEnumTypeAttribute.html)]</para>
        /// > <para>[[CSSPAllowNull](CSSPModels.CSSPAllowNullAttribute.html)]</para>
        /// </summary>
        [CSSPEnumType]
        [CSSPAllowNull]
        public LanguageEnum? Language { get; set; }
        [StringLength(2)]
        public string Lang { get; set; }
        [Range(0, 1000000)]
        public int Skip { get; set; }
        [Range(1, 1000000)]
        public int Take { get; set; }
        [StringLength(200)]
        public string Order { get; set; }
        [StringLength(200)]
        public string Where { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>**Other custom attributes**</para>
        /// > <para>[[CSSPEnumType](CSSPModels.CSSPEnumTypeAttribute.html)]</para>
        /// > <para>[[CSSPAllowNull](CSSPModels.CSSPAllowNullAttribute.html)]</para>
        /// </summary>
        [CSSPEnumType]
        [CSSPAllowNull]
        public EntityQueryDetailTypeEnum? EntityQueryDetailType { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>**Other custom attributes**</para>
        /// > <para>[[CSSPEnumType](CSSPModels.CSSPEnumTypeAttribute.html)]</para>
        /// > <para>[[CSSPAllowNull](CSSPModels.CSSPAllowNullAttribute.html)]</para>
        /// </summary>
        [CSSPEnumType]
        [CSSPAllowNull]
        public EntityQueryTypeEnum? EntityQueryType { get; set; }
        public List<string> OrderList { get; set; }
        public List<WhereInfo> WhereInfoList { get; set; }
        #endregion Properties not in DB

        #region Constructors
        public Query() : base()
        {
            Language = LanguageEnum.en;
            Lang = "en";
            Skip = 0;
            Take = 200;
            Order = "";
            Where = "";
            EntityQueryDetailType = EntityQueryDetailTypeEnum.EntityOnly;
            EntityQueryType = EntityQueryTypeEnum.AsNoTracking;
            OrderList = new List<string>();
            WhereInfoList = new List<WhereInfo>();
        }
        #endregion Constructors
    }
}
