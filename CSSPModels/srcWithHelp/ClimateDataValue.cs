/*
 * Auto generated from the CSSPModelsGenerateCode.proj by clicking on the [Generate Models With Help] button
 *
 * Do not edit this file.
 *
 * Last generated by Charles LeBlanc
 *
 */
using CSSPEnums;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace CSSPModels
{
    /// <summary>
    /// > [!NOTE]
    /// > 
    /// > <para>**DB properties for table ClimateDataValues** : [ClimateDataValueID](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_ClimateDataValueID), [ClimateSiteID](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_ClimateSiteID), [DateTime_Local](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_DateTime_Local), [Keep](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_Keep), [StorageDataType](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_StorageDataType), [Snow_cm](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_Snow_cm), [Rainfall_mm](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_Rainfall_mm), [RainfallEntered_mm](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_RainfallEntered_mm), [TotalPrecip_mm_cm](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_TotalPrecip_mm_cm), [MaxTemp_C](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_MaxTemp_C), [MinTemp_C](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_MinTemp_C), [HeatDegDays_C](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_HeatDegDays_C), [CoolDegDays_C](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_CoolDegDays_C), [SnowOnGround_cm](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_SnowOnGround_cm), [DirMaxGust_0North](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_DirMaxGust_0North), [SpdMaxGust_kmh](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_SpdMaxGust_kmh), [HourlyValues](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_HourlyValues), [LastUpdateDate_UTC](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_LastUpdateDate_UTC), [LastUpdateContactTVItemID](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_LastUpdateContactTVItemID), </para>
    /// > <para>**Other properties** : [LastUpdateContactTVText](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_LastUpdateContactTVText), [StorageDataTypeEnumText](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_StorageDataTypeEnumText), [HasErrors](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_HasErrors), [ValidationResults](CSSPModels.ClimateDataValue.html#CSSPModels_ClimateDataValue_ValidationResults), </para>
    /// > 
    /// > <para>**Used by [CSSPServices](CSSPServices.html)** : [ClimateDataValueService](CSSPServices.ClimateDataValueService.html)</para>
    /// > <para>**Requires [CSSPEnums](CSSPEnums.html)** : [StorageDataTypeEnum](CSSPEnums.StorageDataTypeEnum.html)</para>
    /// > <para>**Return to [CSSPModels](CSSPModels.html)**</para>
    /// </summary>
    public partial class ClimateDataValue
    {
        #region Properties in DB
        [Key]
        public int ClimateDataValueID { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>**Other custom attributes**</para>
        /// > <para>[[CSSPExist](CSSPModels.CSSPExistAttribute.html)(ExistTypeName = "ClimateSite", ExistPlurial = "s", ExistFieldID = "ClimateSiteID")]</para>
        /// </summary>
        [CSSPExist(ExistTypeName = "ClimateSite", ExistPlurial = "s", ExistFieldID = "ClimateSiteID")]
        public int ClimateSiteID { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>**Other custom attributes**</para>
        /// > <para>[[CSSPAfter](CSSPModels.CSSPAfterAttribute.html)(Year = 1980)]</para>
        /// </summary>
        [CSSPAfter(Year = 1980)]
        public DateTime DateTime_Local { get; set; }
        public bool Keep { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>**Other custom attributes**</para>
        /// > <para>[[CSSPEnumType](CSSPModels.CSSPEnumTypeAttribute.html)]</para>
        /// </summary>
        [CSSPEnumType]
        public StorageDataTypeEnum StorageDataType { get; set; }
        [Range(0.0D, 10000.0D)]
        public double? Snow_cm { get; set; }
        [Range(0.0D, 10000.0D)]
        public double? Rainfall_mm { get; set; }
        [Range(0.0D, 10000.0D)]
        public double? RainfallEntered_mm { get; set; }
        [Range(0.0D, 10000.0D)]
        public double? TotalPrecip_mm_cm { get; set; }
        [Range(-50.0D, 50.0D)]
        public double? MaxTemp_C { get; set; }
        [Range(-50.0D, 50.0D)]
        public double? MinTemp_C { get; set; }
        [Range(-1000.0D, 100.0D)]
        public double? HeatDegDays_C { get; set; }
        [Range(-1000.0D, 100.0D)]
        public double? CoolDegDays_C { get; set; }
        [Range(0.0D, 10000.0D)]
        public double? SnowOnGround_cm { get; set; }
        [Range(0.0D, 360.0D)]
        public double? DirMaxGust_0North { get; set; }
        [Range(0.0D, 300.0D)]
        public double? SpdMaxGust_kmh { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>**Other custom attributes**</para>
        /// > <para>[[CSSPAllowNull](CSSPModels.CSSPAllowNullAttribute.html)]</para>
        /// </summary>
        [CSSPAllowNull]
        public string HourlyValues { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>**Other custom attributes**</para>
        /// > <para>[[CSSPAfter](CSSPModels.CSSPAfterAttribute.html)(Year = 1980)]</para>
        /// </summary>
        [CSSPAfter(Year = 1980)]
        public DateTime LastUpdateDate_UTC { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>**Other custom attributes**</para>
        /// > <para>**AllowableTVTypeList is of type [CSSPEnums.TVTypeEnum](CSSPEnums.TVTypeEnum.html)**</para>
        /// > <para>5 == Contact</para>
        /// > <para>[[CSSPExist](CSSPModels.CSSPExistAttribute.html)(ExistTypeName = "TVItem", ExistPlurial = "s", ExistFieldID = "TVItemID", AllowableTVTypeList = "5")]</para>
        /// </summary>
        [CSSPExist(ExistTypeName = "TVItem", ExistPlurial = "s", ExistFieldID = "TVItemID", AllowableTVTypeList = "5")]
        public int LastUpdateContactTVItemID { get; set; }
        #endregion Properties in DB

        #region Properties not in DB
        /// <summary>
        /// > [!NOTE]
        /// > <para>**Other custom attributes**</para>
        /// > <para>[[CSSPAllowNull](CSSPModels.CSSPAllowNullAttribute.html)]</para>
        /// > <para>[[CSSPFill](CSSPModels.CSSPFillAttribute.html)(FillTypeName = "TVItemLanguage", FillPlurial = "s", FillFieldID = "TVItemID", FillEqualField = "LastUpdateContactTVItemID", FillReturnField = "TVText", FillNeedLanguage = true)]</para>
        /// </summary>
        [NotMapped]
        [StringLength(200)]
        [CSSPAllowNull]
        [CSSPFill(FillTypeName = "TVItemLanguage", FillPlurial = "s", FillFieldID = "TVItemID", FillEqualField = "LastUpdateContactTVItemID", FillReturnField = "TVText", FillNeedLanguage = true)]
        public string LastUpdateContactTVText { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>**Other custom attributes**</para>
        /// > <para>[[CSSPAllowNull](CSSPModels.CSSPAllowNullAttribute.html)]</para>
        /// > <para>[[CSSPEnumTypeText](CSSPModels.CSSPEnumTypeTextAttribute.html)(EnumTypeName = "StorageDataTypeEnum", EnumType = "StorageDataType")]</para>
        /// </summary>
        [NotMapped]
        [StringLength(100)]
        [CSSPAllowNull]
        [CSSPEnumTypeText(EnumTypeName = "StorageDataTypeEnum", EnumType = "StorageDataType")]
        public string StorageDataTypeEnumText { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>Will be set to true if an error occurs during CRUD (Creating, Reading, Updating or Deleting) of [ClimateDataValue](CSSPModels.ClimateDataValue)</para>
        /// </summary>
        [NotMapped]
        public bool HasErrors { get; set; }
        /// <summary>
        /// > [!NOTE]
        /// > <para>Will hold all errors which were detected prior or during CRUD (Creating, Reading, Updating or Deleting) of [ClimateDataValue](CSSPModels.ClimateDataValue)</para>
        /// </summary>
        [NotMapped]
        public IEnumerable<ValidationResult> ValidationResults { get; set; }
        #endregion Properties not in DB

        #region Constructors
        public ClimateDataValue()
        {
            ValidationResults = new List<ValidationResult>();
        }
        #endregion Constructors
    }
}
