/*
 * Auto generated from the CSSPModelsGenerateCode.proj
 *
 * Do not edit this file.
 *
 * Last generated by Charles LeBlanc
 *
 */ 
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq;
using System.Globalization;
using System.Transactions;
using System.Collections.Generic;
using CSSPModels.Resources;
using Microsoft.EntityFrameworkCore.Metadata;
using System.Reflection;
using CSSPEnums;
using System.ComponentModel.DataAnnotations;

namespace CSSPModels.Tests
{
    [TestClass]
    public partial class LabSheetWebTest
    {
        #region Variables
        #endregion Variables

        #region Properties
        private LabSheetWeb labSheetWeb { get; set; }
        #endregion Properties

        #region Constructors
        public LabSheetWebTest()
        {
            labSheetWeb = new LabSheetWeb();
        }
        #endregion Constructors

        #region Tests
        [TestMethod]
        public void LabSheetWeb_Properties_Test()
        {
            List<string> propNameList = new List<string>() { "SubsectorTVText", "MWQMRunTVText", "AcceptedOrRejectedByContactTVText", "LastUpdateContactTVText", "SamplingPlanTypeText", "SampleTypeText", "LabSheetTypeText", "LabSheetStatusText",  }.OrderBy(c => c).ToList();
            List<string> propNameNotMappedList = new List<string>() {  }.OrderBy(c => c).ToList();

            int index = 0;
            foreach (PropertyInfo propertyInfo in typeof(LabSheetWeb).GetProperties().Where(c => c.Name != "ValidationResults").OrderBy(c => c.Name).ToList())
            {
                Assert.AreEqual(propertyInfo.Name, propNameList[index]);
                index += 1;
            }

            Assert.AreEqual(propNameList.Count, index);
        }
        [TestMethod]
        public void LabSheetWeb_Has_ValidationResults_Test()
        {
             Assert.IsTrue(typeof(LabSheetWeb).GetProperties().Where(c => c.Name == "ValidationResults").Any());
        }
        [TestMethod]
        public void LabSheetWeb_Every_Property_Has_A_Resource_OK()
        {
               Assert.IsNotNull(CSSPModelsRes.LabSheetWebSubsectorTVText);
               Assert.IsNotNull(CSSPModelsRes.LabSheetWebMWQMRunTVText);
               Assert.IsNotNull(CSSPModelsRes.LabSheetWebAcceptedOrRejectedByContactTVText);
               Assert.IsNotNull(CSSPModelsRes.LabSheetWebLastUpdateContactTVText);
               Assert.IsNotNull(CSSPModelsRes.LabSheetWebSamplingPlanTypeText);
               Assert.IsNotNull(CSSPModelsRes.LabSheetWebSampleTypeText);
               Assert.IsNotNull(CSSPModelsRes.LabSheetWebLabSheetTypeText);
               Assert.IsNotNull(CSSPModelsRes.LabSheetWebLabSheetStatusText);
        }
        [TestMethod]
        public void LabSheetWeb_Every_Property_Has_Get_Set_Test()
        {
               string val1 = "Some text";
               labSheetWeb.SubsectorTVText = val1;
               Assert.AreEqual(val1, labSheetWeb.SubsectorTVText);
               string val2 = "Some text";
               labSheetWeb.MWQMRunTVText = val2;
               Assert.AreEqual(val2, labSheetWeb.MWQMRunTVText);
               string val3 = "Some text";
               labSheetWeb.AcceptedOrRejectedByContactTVText = val3;
               Assert.AreEqual(val3, labSheetWeb.AcceptedOrRejectedByContactTVText);
               string val4 = "Some text";
               labSheetWeb.LastUpdateContactTVText = val4;
               Assert.AreEqual(val4, labSheetWeb.LastUpdateContactTVText);
               string val5 = "Some text";
               labSheetWeb.SamplingPlanTypeText = val5;
               Assert.AreEqual(val5, labSheetWeb.SamplingPlanTypeText);
               string val6 = "Some text";
               labSheetWeb.SampleTypeText = val6;
               Assert.AreEqual(val6, labSheetWeb.SampleTypeText);
               string val7 = "Some text";
               labSheetWeb.LabSheetTypeText = val7;
               Assert.AreEqual(val7, labSheetWeb.LabSheetTypeText);
               string val8 = "Some text";
               labSheetWeb.LabSheetStatusText = val8;
               Assert.AreEqual(val8, labSheetWeb.LabSheetStatusText);
        }
        #endregion Tests
    }
}
