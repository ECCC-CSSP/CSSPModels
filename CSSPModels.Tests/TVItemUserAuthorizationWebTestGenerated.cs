/*
 * Auto generated from the CSSPModelsGenerateCode.proj
 *
 * Do not edit this file.
 *
 * Last generated by Charles LeBlanc
 *
 */ 
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq;
using System.Globalization;
using System.Transactions;
using System.Collections.Generic;
using CSSPModels.Resources;
using Microsoft.EntityFrameworkCore.Metadata;
using System.Reflection;
using CSSPEnums;
using System.ComponentModel.DataAnnotations;

namespace CSSPModels.Tests
{
    [TestClass]
    public partial class TVItemUserAuthorizationWebTest
    {
        #region Variables
        #endregion Variables

        #region Properties
        private TVItemUserAuthorizationWeb tVItemUserAuthorizationWeb { get; set; }
        #endregion Properties

        #region Constructors
        public TVItemUserAuthorizationWebTest()
        {
            tVItemUserAuthorizationWeb = new TVItemUserAuthorizationWeb();
        }
        #endregion Constructors

        #region Tests
        [TestMethod]
        public void TVItemUserAuthorizationWeb_Properties_Test()
        {
            List<string> propNameList = new List<string>() { "ContactTVText", "TVText1", "TVText2", "TVText3", "TVText4", "LastUpdateContactTVText", "TVAuthText",  }.OrderBy(c => c).ToList();
            List<string> propNameNotMappedList = new List<string>() {  }.OrderBy(c => c).ToList();

            int index = 0;
            foreach (PropertyInfo propertyInfo in typeof(TVItemUserAuthorizationWeb).GetProperties().Where(c => c.Name != "ValidationResults").OrderBy(c => c.Name).ToList())
            {
                Assert.AreEqual(propertyInfo.Name, propNameList[index]);
                index += 1;
            }

            Assert.AreEqual(propNameList.Count, index);
        }
        [TestMethod]
        public void TVItemUserAuthorizationWeb_Has_ValidationResults_Test()
        {
             Assert.IsTrue(typeof(TVItemUserAuthorizationWeb).GetProperties().Where(c => c.Name == "ValidationResults").Any());
        }
        [TestMethod]
        public void TVItemUserAuthorizationWeb_Every_Property_Has_A_Resource_OK()
        {
               Assert.IsNotNull(CSSPModelsRes.TVItemUserAuthorizationWebContactTVText);
               Assert.IsNotNull(CSSPModelsRes.TVItemUserAuthorizationWebTVText1);
               Assert.IsNotNull(CSSPModelsRes.TVItemUserAuthorizationWebTVText2);
               Assert.IsNotNull(CSSPModelsRes.TVItemUserAuthorizationWebTVText3);
               Assert.IsNotNull(CSSPModelsRes.TVItemUserAuthorizationWebTVText4);
               Assert.IsNotNull(CSSPModelsRes.TVItemUserAuthorizationWebLastUpdateContactTVText);
               Assert.IsNotNull(CSSPModelsRes.TVItemUserAuthorizationWebTVAuthText);
        }
        [TestMethod]
        public void TVItemUserAuthorizationWeb_Every_Property_Has_Get_Set_Test()
        {
               string val1 = "Some text";
               tVItemUserAuthorizationWeb.ContactTVText = val1;
               Assert.AreEqual(val1, tVItemUserAuthorizationWeb.ContactTVText);
               string val2 = "Some text";
               tVItemUserAuthorizationWeb.TVText1 = val2;
               Assert.AreEqual(val2, tVItemUserAuthorizationWeb.TVText1);
               string val3 = "Some text";
               tVItemUserAuthorizationWeb.TVText2 = val3;
               Assert.AreEqual(val3, tVItemUserAuthorizationWeb.TVText2);
               string val4 = "Some text";
               tVItemUserAuthorizationWeb.TVText3 = val4;
               Assert.AreEqual(val4, tVItemUserAuthorizationWeb.TVText3);
               string val5 = "Some text";
               tVItemUserAuthorizationWeb.TVText4 = val5;
               Assert.AreEqual(val5, tVItemUserAuthorizationWeb.TVText4);
               string val6 = "Some text";
               tVItemUserAuthorizationWeb.LastUpdateContactTVText = val6;
               Assert.AreEqual(val6, tVItemUserAuthorizationWeb.LastUpdateContactTVText);
               string val7 = "Some text";
               tVItemUserAuthorizationWeb.TVAuthText = val7;
               Assert.AreEqual(val7, tVItemUserAuthorizationWeb.TVAuthText);
        }
        #endregion Tests
    }
}
